import time
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from playwright.sync_api import sync_playwright

# --- CONFIG ---
LUNARCRUSH_START_URL = "https://lunarcrush.com/categories/cryptocurrencies"
SPREADSHEET_URL = "https://docs.google.com/spreadsheets/d/1tz0ZoAPpO5gwf0h_0A8MvhTBPni8aMfznWpFRyn1unY/edit#gid=0"
SHEET_NAME = "Cryptocurrencies"

# -----------------
def capture_bearer_token(timeout_ms=60000) -> str | None:
    """Opens LunarCrush and captures Bearer token from responses."""
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=False)  # Set headless=True to hide browser
        context = browser.new_context()
        page = context.new_page()
        token_container = {"token": None}

        def on_response(resp):
            try:
                headers = resp.request.headers
                auth = headers.get("authorization") or headers.get("Authorization")
                if auth and auth.startswith("Bearer "):
                    token_container["token"] = auth.split(" ", 1)[1]
            except Exception:
                pass

        page.on("response", on_response)
        page.goto(LUNARCRUSH_START_URL, wait_until="domcontentloaded")

        end_time = time.time() + (timeout_ms / 1000.0)
        while time.time() < end_time and not token_container["token"]:
            page.wait_for_timeout(1000)

        browser.close()
        return token_container["token"]

def update_google_sheet(token: str):
    """Clear row 2 and write token & timestamp in A2 & B2."""
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    creds = ServiceAccountCredentials.from_json_keyfile_name("creds.json", scope)
    client = gspread.authorize(creds)
    sheet = client.open_by_url(SPREADSHEET_URL).worksheet(SHEET_NAME)

    # Clear row 2
    sheet.update("A2:B2", [["", ""]])

    # Write token and timestamp
    sheet.update("A2", [[token]])
    sheet.update("B2", [[time.strftime("%Y-%m-%d %H:%M:%S")]])

def run_once():
    print("🔍 Capturing fresh token...")
    token = capture_bearer_token(timeout_ms=60000)
    if not token:
        print("❌ Failed to capture token.")
        return
    update_google_sheet(token)
    print(f"✅ Token updated in Google Sheet at {time.strftime('%Y-%m-%d %H:%M:%S')}")

def main():
    while True:
        run_once()
        print("⏳ Sleeping 24 hours...")
        time.sleep(24 * 60 * 60)

if __name__ == "__main__":
    main()
